---
import Logo from "../Logo.astro";
import "@styles/effects/glass.css";

const routes = [
  { path: "/", label: "Inicio" },
  { path: "/#quienes-somos", label: "Quienes Somos" },
  { path: "/#FAQ", label: "FAQ" },
  { path: "/challenges", label: "Opera y Gana" },
];

const activePath = Astro.originPathname;
---

<nav id="nav">
  <Logo />

  <ul class="flex justify-between items-center">
    {
      routes.map(({ path, label }) => (
        <ul>
          <a
            href={path}
            class:list={[
              "mx-1.5 sm:mx-6",
              activePath == path ? "text-primary" : "text-primary-text",
            ]}
          >
            {label}
          </a>
          {activePath === path ? (
            <div
              transition:name="navbar-link-bar"
              class="border-b-3 border-white mx-5"
            />
          ) : (
            <div class="border-b-3 border-transparent" />
          )}
        </ul>
      ))
    }
  </ul>

  <div class="flex gap-3">
    <a class="bg-transparent text-primary-text btn" href="auth#login"
      >Iniciar sesi√≥n</a
    >
    <a class="bg-white text-secondary btn">Empezar</a>
  </div>
  <!-- <div class="absolute w-[90vw] border-[1px] border-white bottom-0 left-[5vw]"></div> -->
</nav>

<style>
  @import "tailwindcss";

  #nav {
    @apply flex justify-between items-center px-10 py-7 w-[100vw] fixed z-20 border-b-1;
    transition:
      border-color ease-in-out 0.4s,
      background-color ease-out 0.25s;
  }

  #nav:not(.scrolled) {
    @apply bg-transparent border-white/0 backdrop-blur-[0px];
  }

  #nav.scrolled {
    @apply bg-gray-400/5;
    @apply border-white/25;
    @apply backdrop-blur-sm;
  }
</style>

<script>
  function onScroll() {
    const header = document.getElementById("nav");
    if (!header) return;

    if (window.scrollY > 100) {
      header.classList.add("scrolled");
    } else {
      header.classList.remove("scrolled");
    }
  }

  document.addEventListener("scroll", onScroll);
</script>

<script type="module">
  const sections = [
    { id: "quienes-somos", path: "/#quienes-somos" },
    { id: "FAQ", path: "/#FAQ" },
    { id: null, path: "/" }, // fallback para arriba del todo
  ];

  const navLinks = document.querySelectorAll("#nav a[href^='/']");

  const updateActiveLink = (path) => {
    navLinks.forEach((link) => {
      const isActive = link.getAttribute("href") === path;
      link.classList.toggle("text-primary", isActive);
      link.classList.toggle("text-primary-text", !isActive);

      const underline = link.nextElementSibling;
      if (underline?.classList.contains("underline-indicator")) {
        underline.style.borderColor = isActive ? "white" : "transparent";
      }
    });
  };

  const observer = new IntersectionObserver(
    (entries) => {
      const visible = entries
        .filter((entry) => entry.isIntersecting)
        .sort((a, b) => b.intersectionRatio - a.intersectionRatio);

      const topVisible = visible[0];
      if (!topVisible) return;

      const id = topVisible.target.id;
      const match = sections.find((s) => s.id === id);
      updateActiveLink(match?.path ?? "/");
    },
    {
      threshold: 0.5,
      rootMargin: "-50% 0px -30% 0px",
    }
  );

  sections.forEach(({ id }) => {
    if (!id) return;
    const el = document.getElementById(id);
    if (el) observer.observe(el);
  });

  window.addEventListener("load", () => {
    if (location.hash) {
      const el = document.querySelector(location.hash);
      el?.scrollIntoView();
    }
  });
</script>
